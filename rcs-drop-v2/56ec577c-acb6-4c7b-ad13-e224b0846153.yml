### YamlMime:SelfAssessment
description: Understand current capabilities across the entire software release lifecycle and quickly identify opportunities for improvement based on the Microsoft DevOps practices.
duration: 30 minutes
questionnaireReferences:
  - questionnaireUid: eeb18ef1-b3e6-49d7-9da5-d5ff90a000e8
    isRequired: false
  - questionnaireUid: 9047ab21-c7fc-4954-a2b4-49d0b7a92dfd
    isRequired: false
  - questionnaireUid: c897e2b4-87ca-40f1-ad3d-398579be05c7
    isRequired: false
  - questionnaireUid: 648970e8-fa10-4b2d-af07-2d166cff3cec
    isRequired: false
  - questionnaireUid: 77989738-b0b1-4e46-991e-53514b20936a
    isRequired: false
  - questionnaireUid: cc557273-fcd4-43f8-b65d-d9d2b6578942
    isRequired: false
  - questionnaireUid: be5b72e4-4842-4eb8-87c8-5e5f2e8d91d7
    isRequired: false
  - questionnaireUid: 87929634-2c74-4e96-b90b-2b504ace0a88
    isRequired: false
guidance:
  title: 30 minutes
  description: Your results
  providers: []
  scoring:
    title: View how your answers align to best practices and recommendations to help you improve your DevOps Capability.
    description: Recommendations for your improvement
    calculationType: Average
    scoresVerbage: Critical|Moderate|Proficent
  nextSteps:
    title: ''
    steps:
      - iconUrl: ''
        description: 'Actionable items to consider implementing to improve your capability across the Microsoft DevOps Practices Ensure you have identified and classified the applications in your portfolio that are critical to business functions. Enterprise organizations typically have a large application portfolio, so prioritizing where to invest time and effort into manual and resource-intensive tasks like threat modeling can increase the effectiveness of your security program.'
        links:
          - title: Identify applications that have a high potential impact and/or a high potential exposure to risk.
            url: /azure/architecture/framework/Security/applications-services#identify-and-classify-business-critical-applications
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - 77989738-b0b1-4e46-991e-53514b20936a.497199fc-dc9d-427e-9eb1-5da771b70685.5
              scoreOf: []
            context: ''
            priority: 0
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Review identify and classify business critical applications
      - iconUrl: ''
        description: 'Identified and classified business critical applications. To activate resources on demand, deploy solutions rapidly, minimize human error, and produce consistent and repeatable results, be sure to automate deployments and updates. As a best practice, create a repository of categorized automation scripts for quick access, documented with explanations of parameters and examples of script use.'
        links:
          - title: 'Keep this documentation in sync with your Azure deployments, and designate a primary person to manage the repository.'
            url: /azure/architecture/framework/DevOps/deployment#automation
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - c897e2b4-87ca-40f1-ad3d-398579be05c7.c1fb793a-0e9a-4ad6-a628-d4cece3d656a.7
              scoreOf: []
            context: Review automation
            priority: 90
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Review automation
      - iconUrl: ''
        description: 'Use automation to deploy and update your applications. Technical debt includes anything the team must do to deploy production quality code and keep it running in production. Examples are bugs, performance issues, operational issues, not having unit tests (necessary for refactoring code), accessibility, and others. SonarQube is a specific example of a tool that provides a set of static analyzers that can be used to identify areas of improvement in your code.'
        links:
          - title: It allows you to analyze the technical debt in your project and keep track of it in the future.
            url: /azure/architecture/framework/DevOps/development#technical-debt
            condition:
              allOf: []
              anyOf:
                - c897e2b4-87ca-40f1-ad3d-398579be05c7.6318fa8b-4f01-430d-9726-d2a9167e2569.0
                - c897e2b4-87ca-40f1-ad3d-398579be05c7.6318fa8b-4f01-430d-9726-d2a9167e2569.1
                - c897e2b4-87ca-40f1-ad3d-398579be05c7.6318fa8b-4f01-430d-9726-d2a9167e2569.4
              noneOf: []
              scoreOf: []
            context: ''
            priority: 0
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Review technical debt
      - iconUrl: ''
        description: Manage and actively resolve the technical debt of applications.
        links:
          - title: Using a health monitoring system like Azure Service Health to identify issues with services affecting application and plan for scheduled maintenance.
            url: /azure/architecture/framework/DevOps/monitoring#underlying-services
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - be5b72e4-4842-4eb8-87c8-5e5f2e8d91d7.e5180d75-7ad0-4e2b-a454-a8afcfd62248.6
              scoreOf: []
            context: Review guidance on how to monitor underlying services
            priority: 88
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Review guidance on how to monitor underlying services
      - iconUrl: ''
        description: 'Monitor underlying services. The Agile movement is about continually finding ways to improve the approach and practice of building software. There is no one-size-fits-all solution to adopting or implementing an Agile approach. Every organization has different needs, constraints, and requirements.'
        links:
          - title: Blindly the following prescriptions won't lead to success.
            url: /devops/plan/adopting-agile
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - eeb18ef1-b3e6-49d7-9da5-d5ff90a000e8.e4a89e79-2ed4-4abd-a7ae-6532e14cf36f.4
                - 87929634-2c74-4e96-b90b-2b504ace0a88.454cbe4a-8d85-4863-886a-2f8349191c66.1
              scoreOf: []
            context: Drive agility in your culture
            priority: 99
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Drive agility in your culture
      - iconUrl: ''
        description: Adopt an Agile culture Teams invest a lot of time and effort in building tests. The goal for shifting left is to move quality upstream by performing testing tasks earlier in the pipeline.
        links:
          - title: 'Through a combination of test and process improvements, this both reduces the time it takes for tests to be run, as well as the impact of failures later on.'
            url: /devops/develop/shift-left-make-testing-fast-reliable
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - c897e2b4-87ca-40f1-ad3d-398579be05c7.13d46ec7-9a9a-49e9-8304-e7609b8d9f11.4
              scoreOf: []
            context: Consider Shift left testing
            priority: 95
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Consider Shift left testing
      - iconUrl: ''
        description: Shift left to make testing fast and reliable
        links:
          - title: Learn how GitHub enables you to build a modern source control strategy that fosters collaboration and enables you to automate your build and deployment processes.
            url: learn/paths/az-400-manage-source-control/
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - 9047ab21-c7fc-4954-a2b4-49d0b7a92dfd.b0854937-5fb4-409c-8116-9e26b0cca23b.1
              scoreOf: []
            context: Build a Modern Source Control Strategy
            priority: 90
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Build a Modern Source Control Strategy
      - iconUrl: ''
        description: 'Manage source control Continuous Delivery (CD) is the process to build, test, configuring, and deploying from a build to a production environment. It provides the foundation for delivery in DevOps upon which tests are run, gates are checked, and bits are deployed.'
        links:
          - title: 'There are a variety of DevOps platforms that offer delivery automation, including GitHub Actions and Azure Pipelines.'
            url: /devops/deliver/delivering-quality-services-with-devops
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - c897e2b4-87ca-40f1-ad3d-398579be05c7.4e43d91b-5b17-4b91-b74f-088f7a3ab149.3
              scoreOf: []
            context: Employing continuous delivery
            priority: 92
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Employing continuous delivery
      - iconUrl: ''
        description: 'Delivering quality services with DevOps '
        links:
          - title: 'Infrastructure as Code (IaC) is the management of infrastructure (networks, virtual machines, load balancers, and connection topology) in a descriptive model, using the same versioning as DevOps team uses for source code.'
            url: devops/deliver/what-is-infrastructure-as-code
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - 648970e8-fa10-4b2d-af07-2d166cff3cec.f4811c68-9eba-4980-aec6-f753f106729e.4
              scoreOf: []
            context: Drive Automation
            priority: 90
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Drive Automation
      - iconUrl: ''
        description: 'Drive Automation thru Infrastructure as Code (IaC) According to Agile principles, autonomous teams are more productive. An Agile organization wants its teams to have autonomy over their day-to-day execution.'
        links:
          - title: But autonomy without alignment would result in chaos.
            url: devops/plan/scaling-agile#line-of-autonomy
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - 87929634-2c74-4e96-b90b-2b504ace0a88.0a5bad90-e036-4445-bc92-4e6af860633a.2
              scoreOf: []
            context: Line of Autonomy
            priority: 95
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Line of Autonomy
      - iconUrl: ''
        description: Drive a Align Autonomy Team Delivering production quality code every sprint requires the Agile development team to account for the accelerated pace.
        links:
          - title: 'All coding, testing, and quality verification must be done each and every sprint.'
            url: /devops/plan/what-is-agile-development
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - eeb18ef1-b3e6-49d7-9da5-d5ff90a000e8.fb511188-487c-41d3-a6d1-b3b6b09b009e.3
                - eeb18ef1-b3e6-49d7-9da5-d5ff90a000e8.c540194e-30c0-435e-b26c-605913eb3f7d.5
                - eeb18ef1-b3e6-49d7-9da5-d5ff90a000e8.2911d995-3a3f-4945-b753-2dca8485fd1c.0
                - eeb18ef1-b3e6-49d7-9da5-d5ff90a000e8.14549bdc-4826-4659-8444-820d545070fc.3
              scoreOf: []
            context: Agile Software Development at Scale
            priority: 92
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Agile Software Development at Scale
      - iconUrl: ''
        description: 'Understand Agile Software Development Use an industry standard benchmark to evaluate your organizations current security posture. Benchmarking allows you to improve your security program by learning from external organizations. Benchmarking lets you know how your current security state compares to that of other organizations, providing both external validation for successful elements of your current system as well as identifying gaps that serve as opportunities to enrich your team’s overall security strategy.'
        links:
          - title: 'Even if your security program isn’t tied to a specific benchmark or regulatory standard, you will benefit from understanding the documented ideal states by those outside and inside of your industry.'
            url: /azure/architecture/framework/Security/governance#evaluate-security-using-benchmarks
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - 77989738-b0b1-4e46-991e-53514b20936a.497199fc-dc9d-427e-9eb1-5da771b70685.3
              scoreOf: []
            context: Review evaluate security using benchmarks
            priority: 92
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Review evaluate security using benchmarks
      - iconUrl: ''
        description: Evaluate your security posture using standard benchmarks. Use Penetration Testing to validate security defenses. Real world validation of security defenses is critical to validate your defense strategy and implementation. This can be accomplished by a penetration test (simulates a one time attack) or a red ream program (simulates a persistent threat actor targeting your environment).
        links:
          - title: 'Standard tests you can perform include Tests on your endpoints to uncover the Open Web Application Security Project (OWASP) top 10 vulnerabilities, Fuzz testing of your endpoints, Port scanning of your endpoints.'
            url: /azure/architecture/framework/security/monitor-test#penetration-testing-pentesting
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - 77989738-b0b1-4e46-991e-53514b20936a.fd47a428-598a-4a46-971f-78cae0cc16d1.0
              scoreOf: []
            context: Review penetration testing
            priority: 90
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Review penetration testing
      - iconUrl: ''
        description: Perform penetration testing.
        links:
          - title: Use Azure Service Health to identify issues with services affecting applications and plan for scheduled maintenance.
            url: /azure/architecture/framework/DevOps/monitoring#underlying-services
            condition:
              allOf: []
              anyOf: []
              noneOf:
                - be5b72e4-4842-4eb8-87c8-5e5f2e8d91d7.e5180d75-7ad0-4e2b-a454-a8afcfd62248.6
              scoreOf: []
            context: Review guidance on how to monitor underlying services
            priority: 90
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Review guidance on how to monitor underlying services
      - iconUrl: ''
        description: Monitor underlying services. Start your DevOps Dojo journey.
        links:
          - title: Learn how to create multidisciplinary DevOps teams by using shared tools and processes designed to make your organization’s software development and implementation projects more efficient.
            url: /learn/paths/devops-dojo-white-belt-foundation/
            condition:
              allOf: []
              anyOf: []
              noneOf: []
              scoreOf: []
            context: ''
            priority: 70
            reportingCategory: ''
            reportingSubCategory: ''
        uid: ''
        name: Launch the DevOps Dojo - White Belt learning path
  recommendationsTitle: ''
owner:
  firstName: Moh
  lastName: Radwan
  email: mohrad@microsoft.com
isHiddenAssessment: false
metadataTags:
  - azure
uid: 56ec577c-acb6-4c7b-ad13-e224b0846153
name: Review the 'DevOps Dojo - White Belt' Learn module