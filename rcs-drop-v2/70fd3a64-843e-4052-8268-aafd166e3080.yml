### YamlMime:NormalSelectQuestion
responseAlternatives:
  - id: A
    text: We evaluated a partitioning strategy within Redis cache.
    description: 'Partitioning a Redis data store involves splitting the data across instances of the Redis service. Each instance constitutes a single partition. Azure Redis Cache abstracts the Redis services behind a facade and does not expose them directly. The simplest way to implement partitioning is to create multiple Azure Redis Cache instances and spread the data across them. You can associate each data item with an identifier (a partition key) that specifies which cache stores the data item. The client application logic can then use this identifier to route requests to the appropriate partition. This scheme is very simple, but if the partitioning scheme changes (for example, if additional Azure Redis Cache instances are created), client applications might need to be reconfigured.'
    imageUrl: ''
    isCorrect: false
    score:
      value: 33
  - id: B
    text: We use Azure Redis cache for persistent (i.e. non-transient) data.
    description: 'As its name implies, Azure Redis Cache is intended as a caching solution. Use it only for holding transient data and not as a permanent data store. Applications that utilize Azure Redis Cache should be able to continue functioning if the cache is unavailable.'
    imageUrl: ''
    isCorrect: false
    score:
      value: 33
  - id: C
    text: We implement retry policies in the context of our Azure Redis Cache.
    description: 'Most Azure services and client SDKs include a retry mechanism. However, these differ because each service has different characteristics and requirements, and so each retry mechanism is tuned to a specific service.'
    imageUrl: ''
    isCorrect: false
    score:
      value: 33
  - id: NOA
    text: None of the above.
    description: ''
    imageUrl: ''
    isCorrect: false
    score:
      value: 0
type: AssessmentQuestion
kind: MultiSelect
stem: 'Please choose the applicable Well-Architected reliability considerations for Redis Cache. If a presented choice is not applicable to your workload, you may check it to avoid getting a recommendation in that context.'
isRequired: false
legacyId: reliability-Redis Cache
uid: 70fd3a64-843e-4052-8268-aafd166e3080
name: Please choose the applicable Well-Architected reliability considerations for Redis Cache.